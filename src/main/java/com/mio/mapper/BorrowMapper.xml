<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mio.mapper.BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.mio.domain.Borrow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="borrow_time" property="borrowTime" jdbcType="DATE" />
    <result column="expire_time" property="expireTime" jdbcType="DATE" />
    <result column="back_time" property="backTime" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, book_id, customer_id, days, borrow_time, expire_time, back_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mio.domain.BorrowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mio.domain.BorrowExample" >
    delete from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mio.domain.Borrow" >
    insert into borrow (id, book_id, customer_id, 
      days, borrow_time, expire_time, 
      back_time, status)
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{days,jdbcType=INTEGER}, #{borrowTime,jdbcType=DATE}, #{expireTime,jdbcType=DATE}, 
      #{backTime,jdbcType=DATE}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.mio.domain.Borrow" >
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="borrowTime != null" >
        borrow_time,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="backTime != null" >
        back_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="days != null" >
        #{days,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=DATE},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=DATE},
      </if>
      <if test="backTime != null" >
        #{backTime,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mio.domain.BorrowExample" resultType="java.lang.Integer" >
    select count(*) from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.days != null" >
        days = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.borrowTime != null" >
        borrow_time = #{record.borrowTime,jdbcType=DATE},
      </if>
      <if test="record.expireTime != null" >
        expire_time = #{record.expireTime,jdbcType=DATE},
      </if>
      <if test="record.backTime != null" >
        back_time = #{record.backTime,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow
    set id = #{record.id,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      days = #{record.days,jdbcType=INTEGER},
      borrow_time = #{record.borrowTime,jdbcType=DATE},
      expire_time = #{record.expireTime,jdbcType=DATE},
      back_time = #{record.backTime,jdbcType=DATE},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mio.domain.Borrow" >
    update borrow
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        borrow_time = #{borrowTime,jdbcType=DATE},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=DATE},
      </if>
      <if test="backTime != null" >
        back_time = #{backTime,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mio.domain.Borrow" >
    update borrow
    set book_id = #{bookId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      days = #{days,jdbcType=INTEGER},
      borrow_time = #{borrowTime,jdbcType=DATE},
      expire_time = #{expireTime,jdbcType=DATE},
      back_time = #{backTime,jdbcType=DATE},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>