<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mio.mapper.CardMapper" >
  <resultMap id="BaseResultMap" type="com.mio.domain.Card" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="card_name" property="cardName" jdbcType="VARCHAR" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="deposit" property="deposit" jdbcType="DOUBLE" />
    <result column="lost" property="lost" jdbcType="DOUBLE" />
    <result column="broken" property="broken" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, card_name, days, number, price, deposit, lost, broken
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mio.domain.CardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from card
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from card
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mio.domain.CardExample" >
    delete from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mio.domain.Card" >
    insert into card (id, card_name, days, 
      number, price, deposit, 
      lost, broken)
    values (#{id,jdbcType=INTEGER}, #{cardName,jdbcType=VARCHAR}, #{days,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{deposit,jdbcType=DOUBLE}, 
      #{lost,jdbcType=DOUBLE}, #{broken,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.mio.domain.Card" >
    insert into card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cardName != null" >
        card_name,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="lost != null" >
        lost,
      </if>
      <if test="broken != null" >
        broken,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardName != null" >
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        #{days,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="lost != null" >
        #{lost,jdbcType=DOUBLE},
      </if>
      <if test="broken != null" >
        #{broken,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mio.domain.CardExample" resultType="java.lang.Integer" >
    select count(*) from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cardName != null" >
        card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.days != null" >
        days = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=DOUBLE},
      </if>
      <if test="record.lost != null" >
        lost = #{record.lost,jdbcType=DOUBLE},
      </if>
      <if test="record.broken != null" >
        broken = #{record.broken,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update card
    set id = #{record.id,jdbcType=INTEGER},
      card_name = #{record.cardName,jdbcType=VARCHAR},
      days = #{record.days,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      deposit = #{record.deposit,jdbcType=DOUBLE},
      lost = #{record.lost,jdbcType=DOUBLE},
      broken = #{record.broken,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mio.domain.Card" >
    update card
    <set >
      <if test="cardName != null" >
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="lost != null" >
        lost = #{lost,jdbcType=DOUBLE},
      </if>
      <if test="broken != null" >
        broken = #{broken,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mio.domain.Card" >
    update card
    set card_name = #{cardName,jdbcType=VARCHAR},
      days = #{days,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      deposit = #{deposit,jdbcType=DOUBLE},
      lost = #{lost,jdbcType=DOUBLE},
      broken = #{broken,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>